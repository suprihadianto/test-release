name: Rust

on:
  push:
    branches: [ "main" ]
    tags:
      - test_release-v*.*.*
    
jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Create a release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          automatic_release_tag: ${{ secrets.RELEASE_NAME }}
          
  linux:
      needs: release
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - name: Build-musl Linux x86
          uses: shogan/rust-musl-action@master
          with:
            args: cargo build --target x86_64-unknown-linux-musl --release
            
        - name: Upload binary to release
          uses: svenstaro/upload-release-action@2.3.0
          with:
            repo_token: ${{ secrets.GIT_TOKEN }}
            file: ${{ github.workspace }}/target/x86_64-unknown-linux-musl/release/${{ secrets.RELEASE_NAME }}
            asset_name: ${{ secrets.RELEASE_NAME }}-linux
            tag:  ${{ secrets.RELEASE_NAME }}
            overwrite: true
        
            

  windows:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Compile
        id: compile
        uses: rust-build/rust-build.action@v1.4.0
        with:
          RUSTTARGET: x86_64-pc-windows-gnu
          ARCHIVE_NAME: "${{ secrets.RELEASE_NAME }}-win"
          UPLOAD_MODE: none
      - name: Build binaries
        run: /bin/bash -c "source $GITHUB_WORKSPACE/github-actions/build.sh"
        env:
          RELEASE_NAME: ${{ secrets.RELEASE_NAME }}-win.zip
      - name: Upload binary to release
        uses: svenstaro/upload-release-action@2.3.0
        with:
          repo_token: ${{ secrets.GIT_TOKEN }}
          file: ${{ github.workspace }}/${{ secrets.RELEASE_NAME }}-win.zip
          asset_name: ${{ secrets.RELEASE_NAME }}-win.zip
          tag:  ${{ secrets.RELEASE_NAME }}
          overwrite: true

